generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminNotification {
  id        String   @id @default(cuid())
  v         Int?     @default(0)
  createdAt DateTime @default(now())
  message   String
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  read      Boolean
  type      String
}

model Admin {
  id       String @id @default(cuid())
  v        Int?   @default(0)
  email    String @unique
  password String
}

model Notification {
  id        String   @id @default(cuid())
  v         Int?     @default(0)
  message   String
  read      Boolean
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Order {
  id                   String        @id @default(cuid())
  v                    Int?          @default(0)
  amount               Int
  buyerEmail           String
  createdAt            DateTime      @default(now())
  productAmount        Int
  productId            String
  product              Product       @relation(fields: [productId], references: [id])
  quantity             Int
  rateAmount           Int?
  rateId               String?
  redisKey             String?
  sellerId             String
  shipmentReference    String?
  subaccount           String
  transactionCharge    Int
  transactionReference String //@unique
  // transaction          Transaction?
  updatedAt            DateTime      @updatedAt
  userId               String
  user                 User          @relation(fields: [userId], references: [id])
  Transaction          Transaction[]
}

model Product {
  id                String              @id @default(cuid())
  v                 Int?                @default(0)
  availability      Boolean
  category          String
  condition         String
  createdAt         DateTime            @default(now())
  description       String
  images            String[]
  location          String
  price             Int                 @default(0)
  priceCategory     String?
  primaryImage      String
  specification     String
  status            String
  tag               String
  title             String
  updatedAt         DateTime            @updatedAt
  uploader          String
  user              User?               @relation(fields: [uploader], references: [id])
  videoUrl          String?
  adminNotification AdminNotification[]
  order             Order[]
}

model Transaction {
  id              String   @id @default(cuid())
  v               Int?     @default(0)
  amount          Int
  createdAt       DateTime @default(now())
  currency        String
  customerEmail   String
  user            User     @relation(fields: [customerEmail], references: [email])
  gatewayResponse String
  order           Order?   @relation(fields: [orderId], references: [id])
  orderId         String?
  paidAt          DateTime
  paymentMethod   String
  reference       String //@unique
  status          String
  transactionId   String
  updatedAt       DateTime @updatedAt
}

model User {
  id                   String         @id @default(cuid())
  v                    Int?           @default(0)
  accountName          String?
  accountNumber        String?
  bankName             String?
  bio                  String?
  city                 String?
  country              String?
  email                String         @unique
  fullName             String
  isVerified           Boolean        @default(false)
  password             String
  phoneNumber          String?
  profilePicture       String?
  state                String?
  username             String
  resetPasswordToken   String?
  resetPasswordExpires DateTime?
  products             Product[]
  notification         Notification[]
  order                Order[]
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  transaction          Transaction[]
}
